<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
					<title>ShareThis Segmenter</title>
				</head>
				<body>
					<script src="getSegment_data/gtm.js" async=""></script><script>
(function(){
  var EventUtil = {
    addHandler: function(element, type, handler) {
      if (element.addEventListener) {
        element.addEventListener(type, handler, false);
      } else if (element.attachEvent) {
        element.attachEvent('on' + type, handler);
      } else {
        element['on' + type] = handler;
      }
    },
    removeHandler: function(element, type, handler) {
      if (element.removeEventListener) {
        element.removeEventListener(type, handler, false);
      } else if (element.detachEvent) {
        element.detachEvent('on' + type, handler);
      } else {
        element['on' + type] = null;
      }
    }
  };
  var evid = getEvid();
  var tagmanUrls = [];

  function getEvid() {
    keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_";
    var ms = new Date().getTime().toString();
    str = ''
    for (var i=0; i<=7; i++) {
      str += keyStr.charAt(ms % 64);
      ms = Math.floor(ms / 64);
    }
    for (var i=0; i < 12;i++) {
      str += keyStr.charAt(Math.floor(Math.random() * 64));
    }
    return str;
  }

  function delete_cookie(name) {
    document.cookie=name+"=;  expires=Thu, 01 Jan 1970 00:00:00 UTC";
  }

  function are_cookies_enabled()
  {
    document.cookie="testcookie=abc";
    cookieEnabled = (document.cookie.indexOf("testcookie") != -1) ? true : false;
    delete_cookie("testcookie");
    return (cookieEnabled);
  }

  function setCookie(cname, cvalue, exdays) {
    if(exdays) {
      var d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      expires = "expires="+d.toUTCString();
    }
    
    var dmn = 'domain='+document.location.hostname;
    var path = 'path=/';
    document.cookie = cname + "=" + cvalue + "; " + (exdays ? expires +"; " : "") + dmn +"; "+ path;
  }

  function getCookie(cname) {
    var name = cname + "=";
    var ca = document.cookie.split(';');
    for(var i=0; i<ca.length; i++) {
      var c = ca[i];
      while (c.charAt(0)==' ') c = c.substring(1);
      if (c.indexOf(name) == 0) return c.substring(name.length,c.length);
    }
    return null;
  }

  function getVariable(str, key) {
    var vars = str.split("&");
    for (var i=0;i<vars.length;i++) {
      var pair = vars[i].split("=");
      if(pair[0] == key){return pair[1];}
    }
    return(false);
  }
  
  function macroReplace(src, pre, value, func){
    macro_to_replace = pre+value+'~~';
    return src.replace(macro_to_replace, func(value));
  }

  function eventMacroReplace(src) {
    return src.replace('~~evid~~', evid);
  }

  function macroMultiReplace(src, pre, func) {
    regExp = new RegExp(pre+".*?~~", "g");
    macro_array = src.match(regExp);
    if (macro_array) {
      for(var i = 0; i <= macro_array.length - 1; i++) {
        regExp = new RegExp(pre+"(.*?)~~");
        value = macro_array[i].match(regExp)[1];
        src = macroReplace(src, pre, value, func)
      }  
    }
    return src;
  }

  function buildSrc(src) {
    src = macroMultiReplace(src, '~~c~', function(value) { return encodeURIComponent(getCookie(value)); });
    src = macroMultiReplace(src, '~~q~', function(value) { return getVariable(window.location.search.substring(1), value); });
    src = eventMacroReplace(src);
    return src;
  }

  function beaconParams() {
    return encodeURIComponent(tagmanUrls.join(','));
  }

  function tagmanBeacon() {
    if (tagmanUrls.length != 0) {
      if (Math.random() < 0.001) {
        var u = "//a655e099a82ba11e5afce0eba1e91271-1839715688.us-east-1.elb.amazonaws.com/p.php?evid="+evid+"&urls="+beaconParams();
        var i = document.createElement("img");
        var src = buildSrc(u);
        i.setAttribute("src", src);
        document.body.appendChild(i);
      }
    }
  }

  EventUtil.addHandler(window, 'unload', tagmanBeacon);

  var tagmanFuncs = {
    dir: function (obj) {
           var i = document.createElement("img");
           var src = buildSrc(obj.URL);
           i.setAttribute("src", src);
           tagmanUrls.push(src.split('?')[0].split('//')[1]);
           document.body.appendChild(i);
         }
  };

  var tagmanConfig = {
    initLoadLimit: 1,
    subsequentLoadLimit: 1,
    pixels: [
/*
      {
        METHOD: 'dir',
        URL: 'https://p.adsymptotic.com/d/px/?_pid=12608&_psign=f58963b3af9d250b387068620e8a4444&_puuid=~~c~__stid~~&_pu=~~q~purl~~',
      },
*/
    ]
  };

  function arrayFilter(arrToFilter, filterFn) {
    var filteredArray = [];
    for(var i = 0; i < arrToFilter.length; i++) {
      if(filterFn(arrToFilter[i])) {
        filteredArray.push(arrToFilter[i]);
      }
    }
    return filteredArray;
  }

  var mustFires = arrayFilter(tagmanConfig.pixels, function(tagmanObj){ return tagmanObj.MUST_FIRE; });
  var otherPixels = arrayFilter(tagmanConfig.pixels, function(tagmanObj){ return !tagmanObj.MUST_FIRE; });

  for(var i = 0; i < mustFires.length; i++){
    tagmanObj = mustFires[i];

    if (tagmanFuncs.hasOwnProperty(tagmanObj.METHOD)) {
      tagmanFuncs[tagmanObj.METHOD](tagmanObj);
    }
  }

  var passAndCursor = (getCookie('tagman_cursor') || '0_0').split('_'),
      pass = parseInt(passAndCursor[0]),
      cursor = parseInt(passAndCursor[1]);

  var fireCount = (pass === 0 && cursor === 0 ? tagmanConfig.initLoadLimit : tagmanConfig.subsequentLoadLimit) || 4;
  fireCount -= mustFires.length;
  fireCount = fireCount > otherPixels.length ? otherPixels.length : fireCount;

  if(pass === 0) {
    if(are_cookies_enabled()) {
      var pixelFires = 0;
      while(pixelFires < fireCount) {
	var tagmanObj;
	if(cursor >= otherPixels.length) {
	  pass++;
	  break;
	}
	tagmanObj = otherPixels[cursor];

	if (tagmanFuncs.hasOwnProperty(tagmanObj.METHOD)) {
	  tagmanFuncs[tagmanObj.METHOD](tagmanObj);
	}
	cursor++;
	pixelFires++;
      }
      setCookie('tagman_cursor', pass+'_'+cursor);
    } else {
      var pixelFires = 0;
      while(pixelFires < fireCount) {
        var tagmanObj;
        var index = Math.floor(Math.random() * otherPixels.length);
        tagmanObj = otherPixels[index];
        if (tagmanFuncs.hasOwnProperty(tagmanObj.METHOD)) {
          tagmanFuncs[tagmanObj.METHOD](tagmanObj);
        }
        otherPixels.splice(index, 1);
        pixelFires++;
      }
    }

  } 


  EventUtil.removeHandler(window, 'unload', tagmanBeacon);
  tagmanBeacon();
})();  
</script><!-- Google Tag Manager -->
<noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-TR24NF" 
height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push(
{'gtm.start': new Date().getTime(),event:'gtm.js'}
);var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-TR24NF');</script>
<!-- End Google Tag Manager --><script type="text/javascript">var ref=document.referrer;var lurl = (("https:" == document.location.protocol) ? "https://sb." : "http://b.")+"scorecardresearch.com/";lurl+="b?";lurl+="c1=7"+"&c2=8097938"+"&rn=" +Math.round(Math.random() * 2147483647 )+ "&c7=" + encodeURIComponent(document.location.href)+ "&c3=8097938"+ "&c8="+encodeURIComponent(document.title)+ ( (ref)? "&c9="+encodeURIComponent(document.referrer) :  "" )+ "&cv=2.2"+ "&cs=js";var logger = new Image(1,1);logger.src = lurl;logger.onload = function(){return;};</script>
<!-- mapping not found: www.seek.com.au -->
				
				</body></html>